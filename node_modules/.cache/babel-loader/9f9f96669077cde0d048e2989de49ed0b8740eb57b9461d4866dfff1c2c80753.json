{"ast":null,"code":"import _classCallCheck from \"C:/Users/HARIKA/Downloads/FitClub-master/FitClub-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/HARIKA/Downloads/FitClub-master/FitClub-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/HARIKA/Downloads/FitClub-master/FitClub-master/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/HARIKA/Downloads/FitClub-master/FitClub-master/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nfunction fireSyntheticPointerEvent(name, handler) {\n  if (!handler) return;\n  var syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n  handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nvar PressGesture = /*#__PURE__*/function (_Feature) {\n  _inherits(PressGesture, _Feature);\n  var _super = _createSuper(PressGesture);\n  function PressGesture() {\n    var _this;\n    _classCallCheck(this, PressGesture);\n    _this = _super.apply(this, arguments);\n    _this.removeStartListeners = noop;\n    _this.removeEndListeners = noop;\n    _this.removeAccessibleListeners = noop;\n    _this.startPointerPress = function (startEvent, startInfo) {\n      _this.removeEndListeners();\n      if (_this.isPressing) return;\n      var props = _this.node.getProps();\n      var endPointerPress = function endPointerPress(endEvent, endInfo) {\n        if (!_this.checkPressEnd()) return;\n        var _this$node$getProps = _this.node.getProps(),\n          onTap = _this$node$getProps.onTap,\n          onTapCancel = _this$node$getProps.onTapCancel;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(_this.node.current, endEvent.target) ? onTapCancel && onTapCancel(endEvent, endInfo) : onTap && onTap(endEvent, endInfo);\n      };\n      var removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n        passive: !(props.onTap || props[\"onPointerUp\"])\n      });\n      var removePointerCancelListener = addPointerEvent(window, \"pointercancel\", function (cancelEvent, cancelInfo) {\n        return _this.cancelPress(cancelEvent, cancelInfo);\n      }, {\n        passive: !(props.onTapCancel || props[\"onPointerCancel\"])\n      });\n      _this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n      _this.startPress(startEvent, startInfo);\n    };\n    _this.startAccessiblePress = function () {\n      var handleKeydown = function handleKeydown(keydownEvent) {\n        if (keydownEvent.key !== \"Enter\" || _this.isPressing) return;\n        var handleKeyup = function handleKeyup(keyupEvent) {\n          if (keyupEvent.key !== \"Enter\" || !_this.checkPressEnd()) return;\n          fireSyntheticPointerEvent(\"up\", _this.node.getProps().onTap);\n        };\n        _this.removeEndListeners();\n        _this.removeEndListeners = addDomEvent(_this.node.current, \"keyup\", handleKeyup);\n        fireSyntheticPointerEvent(\"down\", function (event, info) {\n          _this.startPress(event, info);\n        });\n      };\n      var removeKeydownListener = addDomEvent(_this.node.current, \"keydown\", handleKeydown);\n      var handleBlur = function handleBlur() {\n        if (!_this.isPressing) return;\n        fireSyntheticPointerEvent(\"cancel\", function (cancelEvent, cancelInfo) {\n          return _this.cancelPress(cancelEvent, cancelInfo);\n        });\n      };\n      var removeBlurListener = addDomEvent(_this.node.current, \"blur\", handleBlur);\n      _this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n    };\n    return _this;\n  }\n  _createClass(PressGesture, [{\n    key: \"startPress\",\n    value: function startPress(event, info) {\n      this.isPressing = true;\n      var _this$node$getProps2 = this.node.getProps(),\n        onTapStart = _this$node$getProps2.onTapStart,\n        whileTap = _this$node$getProps2.whileTap;\n      /**\n       * Ensure we trigger animations before firing event callback\n       */\n      if (whileTap && this.node.animationState) {\n        this.node.animationState.setActive(\"whileTap\", true);\n      }\n      onTapStart && onTapStart(event, info);\n    }\n  }, {\n    key: \"checkPressEnd\",\n    value: function checkPressEnd() {\n      this.removeEndListeners();\n      this.isPressing = false;\n      var props = this.node.getProps();\n      if (props.whileTap && this.node.animationState) {\n        this.node.animationState.setActive(\"whileTap\", false);\n      }\n      return !isDragActive();\n    }\n  }, {\n    key: \"cancelPress\",\n    value: function cancelPress(event, info) {\n      if (!this.checkPressEnd()) return;\n      var _this$node$getProps3 = this.node.getProps(),\n        onTapCancel = _this$node$getProps3.onTapCancel;\n      onTapCancel && onTapCancel(event, info);\n    }\n  }, {\n    key: \"mount\",\n    value: function mount() {\n      var props = this.node.getProps();\n      var removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, {\n        passive: !(props.onTapStart || props[\"onPointerStart\"])\n      });\n      var removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n      this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      this.removeStartListeners();\n      this.removeEndListeners();\n      this.removeAccessibleListeners();\n    }\n  }]);\n  return PressGesture;\n}(Feature);\nexport { PressGesture };","map":{"version":3,"names":["extractEventInfo","addDomEvent","addPointerEvent","Feature","pipe","isDragActive","isNodeOrChild","noop","fireSyntheticPointerEvent","name","handler","syntheticPointerEvent","PointerEvent","PressGesture","_Feature","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","props","node","getProps","endPointerPress","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTap","onTapCancel","current","target","removePointerUpListener","window","passive","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","handleKeydown","keydownEvent","key","handleKeyup","keyupEvent","event","info","removeKeydownListener","handleBlur","removeBlurListener","_createClass","value","_this$node$getProps2","onTapStart","whileTap","animationState","setActive","_this$node$getProps3","mount","removePointerListener","removeFocusListener","unmount"],"sources":["C:/Users/HARIKA/Downloads/FitClub-master/FitClub-master/node_modules/framer-motion/dist/es/gestures/press.mjs"],"sourcesContent":["import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}