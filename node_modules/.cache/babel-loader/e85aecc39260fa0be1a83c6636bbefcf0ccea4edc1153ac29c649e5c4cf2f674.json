{"ast":null,"code":"import * as React from 'react';\nimport { useContext, useRef, useMemo } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { nodeGroup } from '../../projection/node/group.mjs';\nconst shouldInheritGroup = inherit => inherit === true;\nconst shouldInheritId = inherit => shouldInheritGroup(inherit === true) || inherit === \"id\";\nconst LayoutGroup = _ref => {\n  let {\n    children,\n    id,\n    inherit = true\n  } = _ref;\n  const layoutGroupContext = useContext(LayoutGroupContext);\n  const [forceRender, key] = useForceUpdate();\n  const context = useRef(null);\n  const upstreamId = layoutGroupContext.id;\n  if (context.current === null) {\n    if (shouldInheritId(inherit) && upstreamId) {\n      id = id ? upstreamId + \"-\" + id : upstreamId;\n    }\n    context.current = {\n      id,\n      group: shouldInheritGroup(inherit) ? layoutGroupContext.group || nodeGroup() : nodeGroup()\n    };\n  }\n  const memoizedContext = useMemo(() => ({\n    ...context.current,\n    forceRender\n  }), [key]);\n  return React.createElement(LayoutGroupContext.Provider, {\n    value: memoizedContext\n  }, children);\n};\nexport { LayoutGroup };","map":{"version":3,"names":["React","useContext","useRef","useMemo","LayoutGroupContext","useForceUpdate","nodeGroup","shouldInheritGroup","inherit","shouldInheritId","LayoutGroup","_ref","children","id","layoutGroupContext","forceRender","key","context","upstreamId","current","group","memoizedContext","createElement","Provider","value"],"sources":["C:/Users/HARIKA/Downloads/FitClub-master/FitClub-master/node_modules/framer-motion/dist/es/components/LayoutGroup/index.mjs"],"sourcesContent":["import * as React from 'react';\nimport { useContext, useRef, useMemo } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { nodeGroup } from '../../projection/node/group.mjs';\n\nconst shouldInheritGroup = (inherit) => inherit === true;\nconst shouldInheritId = (inherit) => shouldInheritGroup(inherit === true) || inherit === \"id\";\nconst LayoutGroup = ({ children, id, inherit = true }) => {\n    const layoutGroupContext = useContext(LayoutGroupContext);\n    const [forceRender, key] = useForceUpdate();\n    const context = useRef(null);\n    const upstreamId = layoutGroupContext.id;\n    if (context.current === null) {\n        if (shouldInheritId(inherit) && upstreamId) {\n            id = id ? upstreamId + \"-\" + id : upstreamId;\n        }\n        context.current = {\n            id,\n            group: shouldInheritGroup(inherit)\n                ? layoutGroupContext.group || nodeGroup()\n                : nodeGroup(),\n        };\n    }\n    const memoizedContext = useMemo(() => ({ ...context.current, forceRender }), [key]);\n    return (React.createElement(LayoutGroupContext.Provider, { value: memoizedContext }, children));\n};\n\nexport { LayoutGroup };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,EAAEC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AACnD,SAASC,kBAAkB,QAAQ,sCAAsC;AACzE,SAASC,cAAc,QAAQ,kCAAkC;AACjE,SAASC,SAAS,QAAQ,iCAAiC;AAE3D,MAAMC,kBAAkB,GAAIC,OAAO,IAAKA,OAAO,KAAK,IAAI;AACxD,MAAMC,eAAe,GAAID,OAAO,IAAKD,kBAAkB,CAACC,OAAO,KAAK,IAAI,CAAC,IAAIA,OAAO,KAAK,IAAI;AAC7F,MAAME,WAAW,GAAGC,IAAA,IAAsC;EAAA,IAArC;IAAEC,QAAQ;IAAEC,EAAE;IAAEL,OAAO,GAAG;EAAK,CAAC,GAAAG,IAAA;EACjD,MAAMG,kBAAkB,GAAGb,UAAU,CAACG,kBAAkB,CAAC;EACzD,MAAM,CAACW,WAAW,EAAEC,GAAG,CAAC,GAAGX,cAAc,CAAC,CAAC;EAC3C,MAAMY,OAAO,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAMgB,UAAU,GAAGJ,kBAAkB,CAACD,EAAE;EACxC,IAAII,OAAO,CAACE,OAAO,KAAK,IAAI,EAAE;IAC1B,IAAIV,eAAe,CAACD,OAAO,CAAC,IAAIU,UAAU,EAAE;MACxCL,EAAE,GAAGA,EAAE,GAAGK,UAAU,GAAG,GAAG,GAAGL,EAAE,GAAGK,UAAU;IAChD;IACAD,OAAO,CAACE,OAAO,GAAG;MACdN,EAAE;MACFO,KAAK,EAAEb,kBAAkB,CAACC,OAAO,CAAC,GAC5BM,kBAAkB,CAACM,KAAK,IAAId,SAAS,CAAC,CAAC,GACvCA,SAAS,CAAC;IACpB,CAAC;EACL;EACA,MAAMe,eAAe,GAAGlB,OAAO,CAAC,OAAO;IAAE,GAAGc,OAAO,CAACE,OAAO;IAAEJ;EAAY,CAAC,CAAC,EAAE,CAACC,GAAG,CAAC,CAAC;EACnF,OAAQhB,KAAK,CAACsB,aAAa,CAAClB,kBAAkB,CAACmB,QAAQ,EAAE;IAAEC,KAAK,EAAEH;EAAgB,CAAC,EAAET,QAAQ,CAAC;AAClG,CAAC;AAED,SAASF,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}